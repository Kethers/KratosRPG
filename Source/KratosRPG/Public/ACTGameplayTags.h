// Kethers's learning-purpose project following Vince Petrelli's Warrior project tutorial from udemy

#pragma once

#include "NativeGameplayTags.h"

namespace ACTGameplayTags
{
	/** Input Tags **/
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Move);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Look);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_EquipAxe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_UnequipAxe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_LightAttack_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_HeavyAttack_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Roll);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SwitchTarget);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Light);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_SpecialWeaponAbility_Heavy);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_PickUp_Stones);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_MustBeHeld_Block);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_TargetLock);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Toggleable_Rage);

	/** Player Tags **/
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Equip_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Unequip_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Light_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Attack_Heavy_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_HitPause);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Roll);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Block);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_TargetLock);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_Rage);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Light);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_SpecialWeaponAbility_Heavy);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Ability_PickUp_Stones);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_Light);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Cooldown_SpecialWeaponAbility_Heavy);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Weapon_Axe);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Equip_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_Unequip_Axe);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_HitPause);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SuccessfulBlock);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Left);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_SwitchTarget_Right);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ActivateRage);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_AOE);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Event_ConsumeStones);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_JumpToFinisher);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rolling);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Blocking);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_TargetLock);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Activating);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Active);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_Full);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_Status_Rage_None);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Light);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Player_SetByCaller_AttackType_Heavy);

	/** Enemy Tags **/
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Melee);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_Range);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SummonEnemies);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Ability_SpawnStone);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Weapon);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Event_SummonEnemies);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Strafing);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_UnderAttack);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Enemy_Status_Unblockable);

	/** Shared Tags **/
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_HitReact);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Ability_Death);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_MeleeHit);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_HitReact);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Event_SpawnProjectile);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_SetByCaller_BaseDamage);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Dead);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Front);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Left);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Right);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_HitReact_Back);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Shared_Status_Invincible);

	/** Game Data Tags **/
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_Level_SurvivalGameModeMap);
	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_Level_MainMenuMap);

	KRATOSRPG_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(GameData_SaveGame_Slot_1);
}
